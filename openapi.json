{
  "openapi": "3.1.0",
  "info": {
    "description": "Cette API permet de gérer les différentes composantes de la course d'orientation fixe de Bex.",
    "version": "1.0.0",
    "title": "API Course orientation Bex"
  },
  "servers": [
    {
      "url": "https://cobex-uu6t.onrender.com/api"
    },
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "utilisateurs",
      "description": "Opérations à propos des utilisateurs"
    },
    {
      "name": "postes",
      "description": "Opérations à propos des postes"
    },
    {
      "name": "parcours",
      "description": "Opérations à propos des parcours"
    },
    {
      "name": "resultats",
      "description": "Opérations à propos des résultats"
    }
  ],
  "paths": {
    "/utilisateurs": {
      "post": {
        "summary": "Créer un nouvel utilisateur",
        "tags": [
          "utilisateurs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonWithToken"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PersonValidationError"
          }
        }
      },
      "get": {
        "summary": "Récupérer la liste des utilisateurs",
        "tags": [
          "utilisateurs"
        ],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Inclure le role des utilisateurs dans la réponse",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "role"
              ],
              "example": "role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des utilisateurs récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartialPersonData"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/utilisateurs/{id}": {
      "get": {
        "summary": "Récupérer un utilisateur par son ID",
        "tags": [
          "utilisateurs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID de l'utilisateur à récupérer"
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartialPersonData"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/utilisateurs/login": {
      "post": {
        "summary": "Connexion d'un utilisateur",
        "tags": [
          "utilisateurs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/postes": {
      "get": {
        "summary": "Récupérer la liste des postes",
        "tags": [
          "postes"
        ],
        "responses": {
          "200": {
            "description": "Liste des postes récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PosteData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/postes/{id}": {
      "get": {
        "summary": "Récupérer un poste par son ID",
        "tags": [
          "postes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID du poste à récupérer"
          }
        ],
        "responses": {
          "200": {
            "description": "Poste récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartialPosteData"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "summary": "Modifier l'accès à un poste",
        "tags": [
          "postes"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID du poste à récupérer"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
                "description": "Indique si le poste est accessible actuellement",
                "example": "estAccessible: false"
              }
            }
          },
        "responses": {
          "200": {
            "description": "Poste modifié avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Poste"
                }
              }
            }
          },
          "400": {
            "description": "Aucune donnée à modifier",
            "content":{
            "text/html": {
              "example": "No data to update"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/parcours": {
      "post": {
        "summary": "Créer un nouveau parcours",
        "tags": ["parcours"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrailData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Parcours créé avec succès",
            "headers": {
              "Location": {
                "description": "URL du nouveau parcours",
                "schema": {
                  "type": "string"
                }
              }
            }, 
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrailCreateResponse"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Récupérer la liste des parcours",
        "tags": ["parcours"],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Inclure des informations supplémentaires (user)",
            "schema": {
              "type": "string",
              "enum": ["user"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des parcours récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartialTrailData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/parcours/{id}": {
      "get": {
        "summary": "Récupérer un parcours par son ID",
        "tags": ["parcours"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Inclure les résultats (postes)",
            "schema": {
              "type": "string",
              "enum": ["postes"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Parcours récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrailWithResults"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Modifier un parcours (remplacement complet)",
        "tags": ["parcours"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrailData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Parcours modifié avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trail"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "patch": {
        "summary": "Modifier partiellement un parcours",
        "tags": ["parcours"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrailData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Parcours modifié avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trail"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "summary": "Supprimer un parcours",
        "tags": ["parcours"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Parcours supprimé avec succès"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/resultats": {
      "post": {
        "summary": "Créer un nouveau résultat",
        "tags": ["resultats"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultatData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Résultat créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resultat"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized" 
          }
        }
      },
      "get": {
        "summary": "Récupérer les résultats",
        "tags": ["resultats"],
        "parameters": [
          {
            "name": "utilisateurs",
            "in": "query",
            "description": "Filtrer par ID utilisateur",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parcours",
            "in": "query", 
            "description": "Filtrer par ID parcours",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Numéro de page (4 résultats par page)",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Inclure des informations supplémentaires",
            "schema": {
              "type": "string",
              "enum": ["utilisateurs", "parcours"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des résultats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultatPartialData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resultats/{userId}": {
      "patch": {
        "summary": "Anonymiser les résultats d'un utilisateur, lors de la suppression de son compte",
        "tags": ["resultats"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Résultats anonymisés avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultatAnonymized"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/resultats/{id}": {
      "delete": {
        "summary": "Supprimer un résultat, lors de la suppression du parcours",
        "tags": ["resultats"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Résultat supprimé avec succès"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "PersonValidationError": {
        "description": "The person is invalid",
        "content": {
          "application/json": {
            "example": {
              "msg": "Utilisateur validation failed : nom: Person Max already exists §§usernameExists§§",
              "errors": {
                "nom": {
                  "kind": "String",
                  "message": "Person `Max` already exists §§usernameExists§§",
                  "name": "validatePersonNameUniqueness",
                  "value": "Max"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Non autorisé",
        "content": {
          "text/html": {
            "example": {
              "message": "Unauthorized"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Interdit",
        "content": {
          "text/html": {
            "example": {
              "message": "Forbidden"
            }
          }
        }
      },
      "NotFound": {
        "description": "Non trouvé",
        "content": {
          "text/html": {
            "example": {
              "message": "Not Found"
            }
          }
        }
      }
    },
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique de l'utilisateur",
            "example": "7038e6fedc4cf8b5ace5a689"
          },
          "nom": {
            "type": "string",
            "description": "Nom de l'utilisateur",
            "minLength": 3,
            "maxLength": 30,
            "example": "John"
          },
          "mail": {
            "type": "mail",
            "description": "Mail de l'utilisateur",
            "example": "example@example.com",
            "format": "email"
          },
          "mdp": {
            "type": "string",
            "description": "Mot de passe de l'utilisateur",
            "example": "SuperMotDePasse",
            "format": "password"
          },
          "role": {
            "type": "string",
            "description": "Rôle de l'utilisateur",
            "enum": [
              "utilisateur",
              "admin",
              "superAdmin"
            ],
            "example": "utilisateur"
          },
          "createdAt": {
            "type": "string",
            "description": "Date de création de l'utilisateur",
            "format": "date-time",
            "example": "2022-01-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "nom",
          "mail",
          "mdp",
          "estAdmin",
          "createdAt"
        ]
      },
      "PersonData": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "description": "Prénom de l'utilisateur",
            "minLength": 3,
            "maxLength": 30,
            "example": "John"
          },
          "mail": {
            "type": "string",
            "description": "Mail de l'utilisateur",
            "example": "example@example.com",
            "format": "email"
          },
          "mdp": {
            "type": "string",
            "description": "Mot de passe de l'utilisateur",
            "example": "SuperMotDePasse",
            "format": "password"
          }
        },
        "required": [
          "nom",
          "mail",
          "mdp"
        ]
      },
      "PartialPersonData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique de l'utilisateur",
            "example": "7038e6fedc4cf8b5ace5a689"
          },
          "nom": {
            "type": "string",
            "description": "Prénom de l'utilisateur",
            "minLength": 3,
            "maxLength": 30,
            "example": "John"
          }
        }
      },
      "PersonWithToken": {
        "type": "object",
        "properties": {
          "savedPerson": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifiant unique de l'utilisateur",
                "example": "7038e6fedc4cf8b5ace5a689"
              },
              "nom": {
                "type": "string",
                "description": "Nom de l'utilisateur",
                "minLength": 3,
                "maxLength": 30,
                "example": "John"
              },
              "mail": {
                "type": "mail",
                "description": "Mail de l'utilisateur",
                "example": "example@example.com",
                "format": "email"
              },
              "role": {
                "type": "string",
                "description": "Rôle de l'utilisateur",
                "enum": [
                  "utilisateur",
                  "admin",
                  "superAdmin"
                ],
                "example": "utilisateur"
              },
              "createdAt": {
                "type": "string",
                "description": "Date de création de l'utilisateur",
                "format": "date-time",
                "example": "2022-01-01T00:00:00Z"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "Token d'authentification",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NzY2N2FlMjQ4NjFhMzFiYmIzMmU1MjAiLCJleHAiOjE3MzQ4NTU3NzgsImlhdCI6MTczNDc2OTM3OH0.NcxYZbhJwwYRUr0H9g780gKyvvspt85GOTiwRb7luP8"
          }
        }
      },
      "LoginData": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string"
          },
          "mdp": {
            "type": "string"
          }
        },
        "required": [
          "nom",
          "mdp"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bienvenue John!"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NzY2N2FlMjQ4NjFhMzFiYmIzMmU1MjAiLCJleHAiOjE3MzQ4NTU3NzgsImlhdCI6MTczNDc2OTM3OH0.NcxYZbhJwwYRUr0H9g780gKyvvspt85GOTiwRb7luP8"
          },
          "utilisateur": {
            "$ref": "#/components/schemas/Person"
          }
        }
      },
      "Poste": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du poste",
            "example": "d038e6fedc4cf8b5ace5a689"
          },
          "geoloc": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "integer",
                "description": "Latitude du poste",
                "example": "567 462"
              },
              "long": {
                "type": "integer",
                "description": "Longitude du poste",
                "example": "123 440"
              }
            },
            "description": "Coordonnées du poste"
          },
          "number": {
            "type": "integer",
            "description": "Le numéro de poste tel que inscrit sur la carte globale",
            "minimum": 30,
            "exclusiveMinimum": true,
            "example": "37"
          },
          "estAccessible": {
            "type": "boolean",
            "description": "Indique si le poste est accessible actuellement",
            "example": true
          },
          "images": {
            "type": "array",
            "description": "Toutes les images qui sont liées au poste",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "descr": {
            "type": "string",
            "description": "Descritpion du poste",
            "example": "A gauche de ce poste se trouve l'arbre cententaire.."
          },
          "createdAt": {
            "type": "string",
            "description": "Date de création du résultat",
            "format": "date-time",
            "example": "2022-01-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "geoloc",
          "number",
          "estAccessible",
          "createdAt"
        ]
      },
      "PosteData": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du poste",
            "example": "d038e6fedc4cf8b5ace5a689"
          },
          "number": {
            "type": "integer",
            "description": "Le numéro de poste tel que inscrit sur la carte globale",
            "minimum": 30,
            "exclusiveMinimum": true,
            "example": "37"
          },
          "geoloc": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "integer",
                "description": "Latitude du poste",
                "example": "567 462"
              },
              "long": {
                "type": "integer",
                "description": "Longitude du poste",
                "example": "123 440"
              }
            },
            "description": "Coordonnées du poste"
          }
        }
      },
      "PartialPosteData": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du poste",
            "example": "d038e6fedc4cf8b5ace5a689"
          },
          "number": {
            "type": "integer",
            "description": "Le numéro de poste tel que inscrit sur la carte globale",
            "minimum": 30,
            "exclusiveMinimum": true,
            "example": "37"
          },
          "geoloc": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "integer",
                "description": "Latitude du poste",
                "example": "567 462"
              },
              "long": {
                "type": "integer",
                "description": "Longitude du poste",
                "example": "123 440"
              }
            },
            "description": "Coordonnées du poste"
          },
          "estAccessible": {
            "type": "boolean",
            "description": "Indique si le poste est accessible actuellement",
            "example": true
          },
          "images": {
            "type": "array",
            "description": "Toutes les images qui sont liées au poste",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "descr": {
            "type": "string",
            "description": "Descritpion du poste",
            "example": "A gauche de ce poste se trouve l'arbre cententaire..."
          }
        }
      },
      "Resultat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du résultat",
            "example": "6cf8e6fedc4cf8b5ace5a689"
          },
          "temps": {
            "type": "integer",
            "description": "Temps en secondes mis pour faire le parcours",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": "600"
          },
          "userID": {
            "type": "string",
            "description": "L'identifiant unique de la personne qui a fait ce temps",
            "example": "7038e6fedc4cf8b5ace5a689"
          },
          "trailID": {
            "type": "string",
            "description": "L'identifiant unique du parcours finalisé",
            "example": "00f8e6fedc4cf8b5ace5a689"
          },
          "createdAt": {
            "type": "string",
            "description": "Date de création du résultat",
            "format": "date-time",
            "example": "2022-01-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "temps",
          "userID",
          "trailID",
          "createdAt"
        ]
      },
      "ResultatAnonymized": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du résultat",
            "example": "6cf8e6fedc4cf8b5ace5a689"
          },
          "temps": {
            "type": "integer",
            "description": "Temps en secondes mis pour faire le parcours",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": "600"
          },
          "userID": {
            "type": "string",
            "description": "L'identifiant de anonyme",
            "example": "7038e6fedc4cf8b5ace5a123"
          },
          "trailID": {
            "type": "string",
            "description": "L'identifiant unique du parcours finalisé",
            "example": "00f8e6fedc4cf8b5ace5a689"
          },
          "createdAt": {
            "type": "string",
            "description": "Date de création du résultat",
            "format": "date-time",
            "example": "2022-01-01T00:00:00Z"
          }
        }
      },
      "ResultatData": {
        "properties": {
          "temps": {
            "type": "integer",
            "description": "Temps en secondes mis pour faire le parcours",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": "600"
          },
          "userID": {
            "type": "string",
            "description": "L'identifiant unique de la personne qui a fait ce temps",
            "example": "7038e6fedc4cf8b5ace5a689"
          },
          "trailID": {
            "type": "string",
            "description": "L'identifiant unique du parcours finalisé",
            "example": "00f8e6fedc4cf8b5ace5a689"
          }
        },
        "required": [
          "temps",
          "userID",
          "trailID"
        ]
      },
      "ResultatPartialData": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du résultat",
            "example": "6cf8e6fedc4cf8b5ace5a689"
          },
          "temps": {
            "type": "integer",
            "description": "Temps en secondes mis pour faire le parcours",
            "minimum": 0,
            "exclusiveMinimum": true,
            "example": "600"
          },
          "utilisateur": {
            "type": "string",
            "description": "Le nom de la personne qui a fait ce temps",
            "example": "John"
          },
          "parcours": {
            "type": "object",
            "description": "Le parcours finalisé",
            "properties": {
              "id":{
                "type": "string",
                "description": "Identifiant unique du parcours",
                "example": "00f8e6fedc4cf8b5ace5a689"
              },
              "nom": {
                "type": "string",
                "description": "Nom du parcours",
                "minLength": 3,
                "maxLength": 30,
                "example": "Printemps 1"
              }
            }
          }
        },
        "required": [
          "temps",
          "userID",
          "trailID"
        ]
      },
      "Trail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du parcours",
            "example": "00f8e6fedc4cf8b5ace5a689"
          },
          "nom": {
            "type": "string",
            "description": "Nom du parcours",
            "minLength": 3,
            "maxLength": 30,
            "example": "Printemps 1"
          },
          "difficulte": {
            "type": "string",
            "description": "Difficulté du parcours",
            "enum": [
              "facile",
              "moyen",
              "difficle",
              "très difficle"
            ],
            "example": "facile"
          },
          "descr": {
            "type": "string",
            "description": "Descriptif du parcours",
            "example": "Ce parcours peut se faire en famille avec une poucette..."
          },
          "createdAt": {
            "type": "string",
            "description": "Date de création de l'utilisateur",
            "format": "date-time",
            "example": "2022-01-01T00:00:00Z"
          },
          "createdBy": {
            "type": "string",
            "description": "L'identifiant unique de la personne qui a créé le parcours",
            "example": "7038e6fedc4cf8b5ace5a689"
          },
          "postesInclus": {
            "type": "array",
            "description": "La liste des postes qui sont dans le parcours",
            "items": {
              "type": "string"
            },
            "example": "[d038e6fedc4cf8b5ace5a689, d027e6fedc4cf8b5ace5a646]"
          }
        },
        "required": [
          "id",
          "nom",
          "difficulte",
          "descr",
          "createdAt",
          "createdBy",
          "postesInclus"
        ]
      },
      "TrailData": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "description": "Nom du parcours",
            "minLength": 3,
            "maxLength": 30,
            "example": "Printemps 1"
          },
          "difficulte": {
            "type": "string",
            "description": "Difficulté du parcours",
            "enum": [
              "facile",
              "moyen",
              "difficle",
              "très difficle"
            ],
            "example": "facile"
          },
          "descr": {
            "type": "string",
            "description": "Descriptif du parcours",
            "example": "Ce parcours peut se faire en famille avec une poucette..."
          },
          "postesInclus": {
            "type": "array",
            "description": "La liste des postes qui sont dans le parcours",
            "items": {
              "type": "string"
            },
            "example": "[d038e6fedc4cf8b5ace5a689, d027e6fedc4cf8b5ace5a646]"
          }
        },
        "required": [
          "nom",
          "difficulte",
          "descr",
          "postesInclus"
        ]
      },
      "PartialTrailData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifiant unique du parcours",
            "example": "00f8e6fedc4cf8b5ace5a689"
          },
          "nom": {
            "type": "string",
            "description": "Nom du parcours",
            "minLength": 3,
            "maxLength": 30,
            "example": "Printemps 1"
          },
          "difficulte": {
            "type": "string",
            "description": "Difficulté du parcours",
            "enum": [
              "facile",
              "moyen",
              "difficle",
              "très difficle"
            ],
            "example": "facile"
          },
          "descr": {
            "type": "string",
            "description": "Descriptif du parcours",
            "example": "Ce parcours peut se faire en famille avec une poucette..."
          },
          "nbr_posts": {
            "type": "integer",
            "description": "Le nombre des postes qui sont dans le parcours",
            "example": 2
          },
          "nomCreateur": {
            "type": "string",
            "description": "Nom de la personne qui a créé le parcours",
            "example": "John"
          }
        }
      },
      "TrailCreateResponse": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties" : {
              "id": {
                "type": "string",
                "description": "Identifiant unique du parcours",
                "example": "00f8e6fedc4cf8b5ace5a689"
              }
            }
          },
          {
            "$ref": "#/components/schemas/TrailData"
          },
          {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "description": "Date de création du parcours",
                "format": "date-time",
                "example": "2022-01-01T00:00:00Z"
              },
              "createdBy": {
                "type": "object",
                "allOf":[
                { "$ref": "#/components/schemas/Person" }
                ]
              }
            }
          }]
      },
      "TrailWithResults": {
            "type": "object",
            "properties": {
              "id": {
            "type": "string",
            "description": "Identifiant unique du parcours",
            "example": "00f8e6fedc4cf8b5ace5a689"
          },
          "nom": {
            "type": "string",
            "description": "Nom du parcours",
            "minLength": 3,
            "maxLength": 30,
            "example": "Printemps 1"
          },
          "difficulte": {
            "type": "string",
            "description": "Difficulté du parcours",
            "enum": [
              "facile",
              "moyen",
              "difficle",
              "très difficle"
            ],
            "example": "facile"
          },
          "descr": {
            "type": "string",
            "description": "Descriptif du parcours",
            "example": "Ce parcours peut se faire en famille avec une poucette..."
          },
          "postesInclus": {
            "type": "array",
            "description": "La liste des postes qui sont dans le parcours",
            "items": {
              "type": "string"
            },
            "example": "[d038e6fedc4cf8b5ace5a689, d027e6fedc4cf8b5ace5a646]"
          },
              "resultatsAct": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "String",
                      "example": "6cf8e6fedc4cf8b5ace5a689"
                    },
                    "temps": {
                      "type": "integer",
                      "example": 600
                    },
                    "user": {
                      "type": "string",
                      "example": "John"
                    }
                  }
                }
              }
            }
      }
    }
  }
}